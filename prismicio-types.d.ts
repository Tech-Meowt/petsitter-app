// Code generated by Slice Machine. DO NOT EDIT.

import type * as prismic from "@prismicio/client";

type Simplify<T> = { [KeyType in keyof T]: T[KeyType] };

type HomepageDocumentDataSlicesSlice =
  | TextBlockSlice
  | HeroSlice
  | ImageLeftTextRightSlice;

/**
 * Content for Homepage documents
 */
interface HomepageDocumentData {
  /**
   * Page Title field in *Homepage*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: homepage.page_title
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  page_title: prismic.KeyTextField;

  /**
   * Slice Zone field in *Homepage*
   *
   * - **Field Type**: Slice Zone
   * - **Placeholder**: *None*
   * - **API ID Path**: homepage.slices[]
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#slices
   */
  slices: prismic.SliceZone<HomepageDocumentDataSlicesSlice> /**
   * Meta Title field in *Homepage*
   *
   * - **Field Type**: Text
   * - **Placeholder**: A title of the page used for social media and search engines
   * - **API ID Path**: homepage.meta_title
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */;
  meta_title: prismic.KeyTextField;

  /**
   * Meta Description field in *Homepage*
   *
   * - **Field Type**: Text
   * - **Placeholder**: A brief summary of the page
   * - **API ID Path**: homepage.meta_description
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  meta_description: prismic.KeyTextField;

  /**
   * Meta Image field in *Homepage*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: homepage.meta_image
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  meta_image: prismic.ImageField<never>;
}

/**
 * Homepage document from Prismic
 *
 * - **API ID**: `homepage`
 * - **Repeatable**: `false`
 * - **Documentation**: https://prismic.io/docs/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type HomepageDocument<Lang extends string = string> =
  prismic.PrismicDocumentWithoutUID<
    Simplify<HomepageDocumentData>,
    "homepage",
    Lang
  >;

export type AllDocumentTypes = HomepageDocument;

/**
 * Primary content in *Hero → Primary*
 */
export interface HeroSliceDefaultPrimary {
  /**
   * Add Space Above field in *Hero → Primary*
   *
   * - **Field Type**: Select
   * - **Placeholder**: Select whether there should be space above this section
   * - **Default Value**: Yes
   * - **API ID Path**: hero.primary.add_space_above
   * - **Documentation**: https://prismic.io/docs/field#select
   */
  add_space_above: prismic.SelectField<"Yes" | "No", "filled">;

  /**
   * Add Space Below field in *Hero → Primary*
   *
   * - **Field Type**: Select
   * - **Placeholder**: Select whether there should be space below this section
   * - **Default Value**: Yes
   * - **API ID Path**: hero.primary.add_space_below
   * - **Documentation**: https://prismic.io/docs/field#select
   */
  add_space_below: prismic.SelectField<"Yes" | "No", "filled">;

  /**
   * Hero Image field in *Hero → Primary*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: hero.primary.hero_image
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  hero_image: prismic.ImageField<never>;
}

/**
 * Default variation for Hero Slice
 *
 * - **API ID**: `default`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type HeroSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<HeroSliceDefaultPrimary>,
  never
>;

/**
 * Slice variation for *Hero*
 */
type HeroSliceVariation = HeroSliceDefault;

/**
 * Hero Shared Slice
 *
 * - **API ID**: `hero`
 * - **Description**: Hero
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type HeroSlice = prismic.SharedSlice<"hero", HeroSliceVariation>;

/**
 * Primary content in *SplitImageWithText → Primary*
 */
export interface ImageLeftTextRightSliceDefaultPrimary {
  /**
   * Add Space Above field in *SplitImageWithText → Primary*
   *
   * - **Field Type**: Select
   * - **Placeholder**: Select whether there should be space above this section
   * - **Default Value**: Yes
   * - **API ID Path**: image_left_text_right.primary.add_space_above
   * - **Documentation**: https://prismic.io/docs/field#select
   */
  add_space_above: prismic.SelectField<"Yes" | "No", "filled">;

  /**
   * Add Space Below field in *SplitImageWithText → Primary*
   *
   * - **Field Type**: Select
   * - **Placeholder**: Select whether there should be space below this section
   * - **Default Value**: Yes
   * - **API ID Path**: image_left_text_right.primary.add_space_below
   * - **Documentation**: https://prismic.io/docs/field#select
   */
  add_space_below: prismic.SelectField<"Yes" | "No", "filled">;

  /**
   * Background Color field in *SplitImageWithText → Primary*
   *
   * - **Field Type**: Select
   * - **Placeholder**: Select a background color
   * - **Default Value**: White
   * - **API ID Path**: image_left_text_right.primary.background_color
   * - **Documentation**: https://prismic.io/docs/field#select
   */
  background_color: prismic.SelectField<
    "White" | "Purple" | "Lavender",
    "filled"
  >;

  /**
   * Image field in *SplitImageWithText → Primary*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: image_left_text_right.primary.image
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  image: prismic.ImageField<never>;

  /**
   * Text Align field in *SplitImageWithText → Primary*
   *
   * - **Field Type**: Select
   * - **Placeholder**: Select the placement of your text
   * - **Default Value**: Center
   * - **API ID Path**: image_left_text_right.primary.text_align
   * - **Documentation**: https://prismic.io/docs/field#select
   */
  text_align: prismic.SelectField<"Center" | "Left" | "Right", "filled">;

  /**
   * Text field in *SplitImageWithText → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: Enter text
   * - **API ID Path**: image_left_text_right.primary.text
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  text: prismic.RichTextField;
}

/**
 * Image Left variation for SplitImageWithText Slice
 *
 * - **API ID**: `default`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type ImageLeftTextRightSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<ImageLeftTextRightSliceDefaultPrimary>,
  never
>;

/**
 * Primary content in *SplitImageWithText → Primary*
 */
export interface ImageLeftTextRightSliceImageRightPrimary {
  /**
   * Add Space Above field in *SplitImageWithText → Primary*
   *
   * - **Field Type**: Select
   * - **Placeholder**: Select whether there should be space above this section
   * - **Default Value**: Yes
   * - **API ID Path**: image_left_text_right.primary.add_space_above
   * - **Documentation**: https://prismic.io/docs/field#select
   */
  add_space_above: prismic.SelectField<"Yes" | "No", "filled">;

  /**
   * Add Space Below field in *SplitImageWithText → Primary*
   *
   * - **Field Type**: Select
   * - **Placeholder**: Select whether there should be space below this section
   * - **Default Value**: Yes
   * - **API ID Path**: image_left_text_right.primary.add_space_below
   * - **Documentation**: https://prismic.io/docs/field#select
   */
  add_space_below: prismic.SelectField<"Yes" | "No", "filled">;

  /**
   * Background Color field in *SplitImageWithText → Primary*
   *
   * - **Field Type**: Select
   * - **Placeholder**: Select background color
   * - **Default Value**: White
   * - **API ID Path**: image_left_text_right.primary.background_color
   * - **Documentation**: https://prismic.io/docs/field#select
   */
  background_color: prismic.SelectField<
    "White" | "Purple" | "Lavender",
    "filled"
  >;

  /**
   * Image field in *SplitImageWithText → Primary*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: image_left_text_right.primary.image
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  image: prismic.ImageField<never>;

  /**
   * Text Align field in *SplitImageWithText → Primary*
   *
   * - **Field Type**: Select
   * - **Placeholder**: Select the placement of your text
   * - **Default Value**: Center
   * - **API ID Path**: image_left_text_right.primary.text_align
   * - **Documentation**: https://prismic.io/docs/field#select
   */
  text_align: prismic.SelectField<"Center" | "Left" | "Right", "filled">;

  /**
   * Text field in *SplitImageWithText → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: Enter text
   * - **API ID Path**: image_left_text_right.primary.text
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  text: prismic.RichTextField;
}

/**
 * Image Right variation for SplitImageWithText Slice
 *
 * - **API ID**: `imageRight`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type ImageLeftTextRightSliceImageRight = prismic.SharedSliceVariation<
  "imageRight",
  Simplify<ImageLeftTextRightSliceImageRightPrimary>,
  never
>;

/**
 * Primary content in *SplitImageWithText → Primary*
 */
export interface ImageLeftTextRightSliceTextWithMultipleImagesPrimary {
  /**
   * Add Space Above field in *SplitImageWithText → Primary*
   *
   * - **Field Type**: Select
   * - **Placeholder**: Select whether there should be space above this section
   * - **Default Value**: Yes
   * - **API ID Path**: image_left_text_right.primary.add_space_above
   * - **Documentation**: https://prismic.io/docs/field#select
   */
  add_space_above: prismic.SelectField<"Yes" | "No", "filled">;

  /**
   * Add Space Below field in *SplitImageWithText → Primary*
   *
   * - **Field Type**: Select
   * - **Placeholder**: Select whether there should be space below this section
   * - **Default Value**: Yes
   * - **API ID Path**: image_left_text_right.primary.add_space_below
   * - **Documentation**: https://prismic.io/docs/field#select
   */
  add_space_below: prismic.SelectField<"Yes" | "No", "filled">;

  /**
   * Background Color field in *SplitImageWithText → Primary*
   *
   * - **Field Type**: Select
   * - **Placeholder**: Select a background color
   * - **Default Value**: White
   * - **API ID Path**: image_left_text_right.primary.background_color
   * - **Documentation**: https://prismic.io/docs/field#select
   */
  background_color: prismic.SelectField<
    "White" | "Purple" | "Lavender",
    "filled"
  >;

  /**
   * Text Align field in *SplitImageWithText → Primary*
   *
   * - **Field Type**: Select
   * - **Placeholder**: Select the placement of your text
   * - **Default Value**: Center
   * - **API ID Path**: image_left_text_right.primary.text_align
   * - **Documentation**: https://prismic.io/docs/field#select
   */
  text_align: prismic.SelectField<"Center" | "Left" | "Right", "filled">;

  /**
   * Text field in *SplitImageWithText → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: Enter text
   * - **API ID Path**: image_left_text_right.primary.text
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  text: prismic.RichTextField;
}

/**
 * Primary content in *SplitImageWithText → Items*
 */
export interface ImageLeftTextRightSliceTextWithMultipleImagesItem {
  /**
   * Image field in *SplitImageWithText → Items*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: image_left_text_right.items[].image
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  image: prismic.ImageField<never>;
}

/**
 * Text with Multiple Images variation for SplitImageWithText Slice
 *
 * - **API ID**: `textWithMultipleImages`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type ImageLeftTextRightSliceTextWithMultipleImages =
  prismic.SharedSliceVariation<
    "textWithMultipleImages",
    Simplify<ImageLeftTextRightSliceTextWithMultipleImagesPrimary>,
    Simplify<ImageLeftTextRightSliceTextWithMultipleImagesItem>
  >;

/**
 * Slice variation for *SplitImageWithText*
 */
type ImageLeftTextRightSliceVariation =
  | ImageLeftTextRightSliceDefault
  | ImageLeftTextRightSliceImageRight
  | ImageLeftTextRightSliceTextWithMultipleImages;

/**
 * SplitImageWithText Shared Slice
 *
 * - **API ID**: `image_left_text_right`
 * - **Description**: ImageLeftTextRight
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type ImageLeftTextRightSlice = prismic.SharedSlice<
  "image_left_text_right",
  ImageLeftTextRightSliceVariation
>;

/**
 * Primary content in *TextBlock → Primary*
 */
export interface TextBlockSliceDefaultPrimary {
  /**
   * Add Space Above field in *TextBlock → Primary*
   *
   * - **Field Type**: Select
   * - **Placeholder**: Select whether there should be space above this section
   * - **Default Value**: Yes
   * - **API ID Path**: text_block.primary.add_space_above
   * - **Documentation**: https://prismic.io/docs/field#select
   */
  add_space_above: prismic.SelectField<"Yes" | "No", "filled">;

  /**
   * Add Space Below field in *TextBlock → Primary*
   *
   * - **Field Type**: Select
   * - **Placeholder**: Select whether there should be space below this section
   * - **Default Value**: Yes
   * - **API ID Path**: text_block.primary.add_space_below
   * - **Documentation**: https://prismic.io/docs/field#select
   */
  add_space_below: prismic.SelectField<"Yes" | "No", "filled">;

  /**
   * Background Color field in *TextBlock → Primary*
   *
   * - **Field Type**: Select
   * - **Placeholder**: Select a background color
   * - **Default Value**: White
   * - **API ID Path**: text_block.primary.background_color
   * - **Documentation**: https://prismic.io/docs/field#select
   */
  background_color: prismic.SelectField<
    "White" | "Purple" | "Lavender",
    "filled"
  >;

  /**
   * Text Align field in *TextBlock → Primary*
   *
   * - **Field Type**: Select
   * - **Placeholder**: Select the placement of your text
   * - **Default Value**: Center
   * - **API ID Path**: text_block.primary.text_align
   * - **Documentation**: https://prismic.io/docs/field#select
   */
  text_align: prismic.SelectField<"Center" | "Left" | "Right", "filled">;

  /**
   * Text field in *TextBlock → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: Enter text
   * - **API ID Path**: text_block.primary.text
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  text: prismic.RichTextField;
}

/**
 * Default variation for TextBlock Slice
 *
 * - **API ID**: `default`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type TextBlockSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<TextBlockSliceDefaultPrimary>,
  never
>;

/**
 * Primary content in *TextBlock → Primary*
 */
export interface TextBlockSliceTextGridWithHeadingPrimary {
  /**
   * Add Space Above field in *TextBlock → Primary*
   *
   * - **Field Type**: Select
   * - **Placeholder**: Select whether there should be space above this section
   * - **Default Value**: Yes
   * - **API ID Path**: text_block.primary.add_space_above
   * - **Documentation**: https://prismic.io/docs/field#select
   */
  add_space_above: prismic.SelectField<"Yes" | "No", "filled">;

  /**
   * Add Space Below field in *TextBlock → Primary*
   *
   * - **Field Type**: Select
   * - **Placeholder**: Select whether there should be space below this section
   * - **Default Value**: Yes
   * - **API ID Path**: text_block.primary.add_space_below
   * - **Documentation**: https://prismic.io/docs/field#select
   */
  add_space_below: prismic.SelectField<"Yes" | "No", "filled">;

  /**
   * Background Color field in *TextBlock → Primary*
   *
   * - **Field Type**: Select
   * - **Placeholder**: Select a background color
   * - **Default Value**: White
   * - **API ID Path**: text_block.primary.background_color
   * - **Documentation**: https://prismic.io/docs/field#select
   */
  background_color: prismic.SelectField<
    "White" | "Purple" | "Lavender",
    "filled"
  >;

  /**
   * Text Align field in *TextBlock → Primary*
   *
   * - **Field Type**: Select
   * - **Placeholder**: Select the placement of your text
   * - **Default Value**: Center
   * - **API ID Path**: text_block.primary.text_align
   * - **Documentation**: https://prismic.io/docs/field#select
   */
  text_align: prismic.SelectField<"Center" | "Left" | "Right", "filled">;

  /**
   * Heading Text field in *TextBlock → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: Enter heading
   * - **API ID Path**: text_block.primary.heading_text
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  heading_text: prismic.RichTextField;
}

/**
 * Primary content in *TextBlock → Items*
 */
export interface TextBlockSliceTextGridWithHeadingItem {
  /**
   * Grid Item Text Align field in *TextBlock → Items*
   *
   * - **Field Type**: Select
   * - **Placeholder**: Select the placement of your text
   * - **Default Value**: Center
   * - **API ID Path**: text_block.items[].grid_item_text_align
   * - **Documentation**: https://prismic.io/docs/field#select
   */
  grid_item_text_align: prismic.SelectField<
    "Center" | "Left" | "Right",
    "filled"
  >;

  /**
   * Grid Item Text field in *TextBlock → Items*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: text_block.items[].grid_item_text
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  grid_item_text: prismic.RichTextField;
}

/**
 * TextGridWithHeading variation for TextBlock Slice
 *
 * - **API ID**: `textGridWithHeading`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type TextBlockSliceTextGridWithHeading = prismic.SharedSliceVariation<
  "textGridWithHeading",
  Simplify<TextBlockSliceTextGridWithHeadingPrimary>,
  Simplify<TextBlockSliceTextGridWithHeadingItem>
>;

/**
 * Primary content in *TextBlock → Primary*
 */
export interface TextBlockSliceTextGridWithButtonPrimary {
  /**
   * Add Space Above field in *TextBlock → Primary*
   *
   * - **Field Type**: Select
   * - **Placeholder**: Select whether there should be space above this section
   * - **Default Value**: Yes
   * - **API ID Path**: text_block.primary.add_space_above
   * - **Documentation**: https://prismic.io/docs/field#select
   */
  add_space_above: prismic.SelectField<"Yes" | "No", "filled">;

  /**
   * Add Space Below field in *TextBlock → Primary*
   *
   * - **Field Type**: Select
   * - **Placeholder**: Select whether there should be space below this section
   * - **Default Value**: Yes
   * - **API ID Path**: text_block.primary.add_space_below
   * - **Documentation**: https://prismic.io/docs/field#select
   */
  add_space_below: prismic.SelectField<"Yes" | "No", "filled">;

  /**
   * Background Color field in *TextBlock → Primary*
   *
   * - **Field Type**: Select
   * - **Placeholder**: Select a background color
   * - **Default Value**: White
   * - **API ID Path**: text_block.primary.background_color
   * - **Documentation**: https://prismic.io/docs/field#select
   */
  background_color: prismic.SelectField<
    "White" | "Purple" | "Lavender",
    "filled"
  >;

  /**
   * Text Align field in *TextBlock → Primary*
   *
   * - **Field Type**: Select
   * - **Placeholder**: Select the placement of your text
   * - **Default Value**: Center
   * - **API ID Path**: text_block.primary.text_align
   * - **Documentation**: https://prismic.io/docs/field#select
   */
  text_align: prismic.SelectField<"Center" | "Left" | "Right", "filled">;

  /**
   * Heading Text field in *TextBlock → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: Enter heading
   * - **API ID Path**: text_block.primary.heading_text
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  heading_text: prismic.RichTextField;
}

/**
 * Primary content in *TextBlock → Items*
 */
export interface TextBlockSliceTextGridWithButtonItem {
  /**
   * Grid Item Text Align field in *TextBlock → Items*
   *
   * - **Field Type**: Select
   * - **Placeholder**: Select the placement of your text
   * - **Default Value**: Center
   * - **API ID Path**: text_block.items[].grid_item_text_align
   * - **Documentation**: https://prismic.io/docs/field#select
   */
  grid_item_text_align: prismic.SelectField<
    "Center" | "Left" | "Right",
    "filled"
  >;

  /**
   * Grid Item Text field in *TextBlock → Items*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: text_block.items[].grid_item_text
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  grid_item_text: prismic.RichTextField;
}

/**
 * Text Grid With Button variation for TextBlock Slice
 *
 * - **API ID**: `textGridWithButton`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type TextBlockSliceTextGridWithButton = prismic.SharedSliceVariation<
  "textGridWithButton",
  Simplify<TextBlockSliceTextGridWithButtonPrimary>,
  Simplify<TextBlockSliceTextGridWithButtonItem>
>;

/**
 * Slice variation for *TextBlock*
 */
type TextBlockSliceVariation =
  | TextBlockSliceDefault
  | TextBlockSliceTextGridWithHeading
  | TextBlockSliceTextGridWithButton;

/**
 * TextBlock Shared Slice
 *
 * - **API ID**: `text_block`
 * - **Description**: TextBlock
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type TextBlockSlice = prismic.SharedSlice<
  "text_block",
  TextBlockSliceVariation
>;

declare module "@prismicio/client" {
  interface CreateClient {
    (
      repositoryNameOrEndpoint: string,
      options?: prismic.ClientConfig,
    ): prismic.Client<AllDocumentTypes>;
  }

  namespace Content {
    export type {
      HomepageDocument,
      HomepageDocumentData,
      HomepageDocumentDataSlicesSlice,
      AllDocumentTypes,
      HeroSlice,
      HeroSliceDefaultPrimary,
      HeroSliceVariation,
      HeroSliceDefault,
      ImageLeftTextRightSlice,
      ImageLeftTextRightSliceDefaultPrimary,
      ImageLeftTextRightSliceImageRightPrimary,
      ImageLeftTextRightSliceTextWithMultipleImagesPrimary,
      ImageLeftTextRightSliceTextWithMultipleImagesItem,
      ImageLeftTextRightSliceVariation,
      ImageLeftTextRightSliceDefault,
      ImageLeftTextRightSliceImageRight,
      ImageLeftTextRightSliceTextWithMultipleImages,
      TextBlockSlice,
      TextBlockSliceDefaultPrimary,
      TextBlockSliceTextGridWithHeadingPrimary,
      TextBlockSliceTextGridWithHeadingItem,
      TextBlockSliceTextGridWithButtonPrimary,
      TextBlockSliceTextGridWithButtonItem,
      TextBlockSliceVariation,
      TextBlockSliceDefault,
      TextBlockSliceTextGridWithHeading,
      TextBlockSliceTextGridWithButton,
    };
  }
}
